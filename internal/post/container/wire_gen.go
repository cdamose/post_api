// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package container

import (
	"github.com/jmoiron/sqlx"
	"post_api/internal/post/app"
	"post_api/internal/post/domain"
	"post_api/internal/post/repository/adapters"
	"post_api/internal/common/config"
	"post_api/internal/common/logs"
)

// Injectors from wire.go:

func InitializeDomain(config2 config.Config, db *sqlx.DB) (app.PingApp, error) {
	entry := logs.Init(config2)
	postgressPingRepository := adapters.NewPostgressPingRepository(db, entry, config2)
	pingDomain := domain.NewPingDomain(entry, config2, postgressPingRepository)
	pingApplication := app.NewPingApplication(entry, config2, pingDomain)
	return pingApplication, nil
}

func InitializePingApplication(config2 config.Config, db *sqlx.DB) (app.PingApp, error) {
	entry := logs.Init(config2)
	postgressPingRepository := adapters.NewPostgressPingRepository(db, entry, config2)
	pingDomain := domain.NewPingDomain(entry, config2, postgressPingRepository)
	pingApplication := app.NewPingApplication(entry, config2, pingDomain)
	return pingApplication, nil
}

func InitializePostApplication(config2 config.Config, db *sqlx.DB) (app.PostApp, error) {
	entry := logs.Init(config2)
	postgresPostRepository := adapters.NewPostgresPostRepository(db, entry, config2)
	PostDomain := domain.NewPostDomain(entry, config2, postgresPostRepository)
	PostApplication := app.NewPostApplication(entry, config2, PostDomain)
	return PostApplication, nil
}
